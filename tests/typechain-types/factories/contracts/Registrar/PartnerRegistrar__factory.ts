/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PartnerRegistrar,
  PartnerRegistrarInterface,
} from "../../../contracts/Registrar/PartnerRegistrar";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAccessControl",
        name: "accessControl",
        type: "address",
      },
      {
        internalType: "contract NodeOwner",
        name: "nodeOwner",
        type: "address",
      },
      {
        internalType: "contract IERC677",
        name: "rif",
        type: "address",
      },
      {
        internalType: "contract IPartnerManager",
        name: "partnerManager",
        type: "address",
      },
      {
        internalType: "contract RNS",
        name: "rns",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "OnlyHighLevelOperator",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "hostContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeManagerContract",
        type: "address",
      },
    ],
    name: "FeeManagerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "partner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "NameRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "canReveal",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "partner",
        type: "address",
      },
    ],
    name: "commit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPartnerManager",
    outputs: [
      {
        internalType: "contract IPartnerManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "nameOwner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "makeCommitment",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "partner",
        type: "address",
      },
    ],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "nameOwner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "partner",
        type: "address",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFeeManager",
        name: "feeManager",
        type: "address",
      },
    ],
    name: "setFeeManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "tokenFallback",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type PartnerRegistrarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PartnerRegistrarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PartnerRegistrar__factory extends ContractFactory {
  constructor(...args: PartnerRegistrarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    accessControl: PromiseOrValue<string>,
    nodeOwner: PromiseOrValue<string>,
    rif: PromiseOrValue<string>,
    partnerManager: PromiseOrValue<string>,
    rns: PromiseOrValue<string>,
    rootNode: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PartnerRegistrar> {
    return super.deploy(
      accessControl,
      nodeOwner,
      rif,
      partnerManager,
      rns,
      rootNode,
      overrides || {}
    ) as Promise<PartnerRegistrar>;
  }
  override getDeployTransaction(
    accessControl: PromiseOrValue<string>,
    nodeOwner: PromiseOrValue<string>,
    rif: PromiseOrValue<string>,
    partnerManager: PromiseOrValue<string>,
    rns: PromiseOrValue<string>,
    rootNode: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      accessControl,
      nodeOwner,
      rif,
      partnerManager,
      rns,
      rootNode,
      overrides || {}
    );
  }
  override attach(address: string): PartnerRegistrar {
    return super.attach(address) as PartnerRegistrar;
  }
  override connect(signer: Signer): PartnerRegistrar__factory {
    return super.connect(signer) as PartnerRegistrar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PartnerRegistrarInterface {
    return new utils.Interface(_abi) as PartnerRegistrarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PartnerRegistrar {
    return new Contract(address, _abi, signerOrProvider) as PartnerRegistrar;
  }
}
